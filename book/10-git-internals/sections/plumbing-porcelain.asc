[[_plumbing_porcelain]]
=== Plumbing и Porcelain команди

В книгата дотук използвахме около 30 на брой подкоманди на Git като `checkout`, `branch`, `remote`, и т.н.
Но понеже Git отначало беше само набор от инструменти за контрол на версиите, вместо пълнофункционална user-friendly VCS, тя разполага с много подкоманди, които вършат работата на ниско ниво и са проектирани да се използват взаимно в UNIX-стил или да бъдат извиквани от скриптове.
Тези команди от по-ниско ниво в Git се наричат "`plumbing`" команди, докато по-потребителски ориентираните са получили наименованието "`porcelain`" команди.

Както виждате, в деветте глави дотук, работихме почти само с porcelain командите.
В тази глава обаче, акцентът ще е върху plumbing командите, които дават достъп до вътрешните Git механизми и демонстрират как и защо Git се справя със задачите си.
Много от тези команди не са предназначени за ръчно използване от командния ред, вместо това те са подходящи за градивни елементи в множество странични инструменти и специфични скриптове.

Изпълнявайки `git init` в дадена директория, Git създава поддиректорията `.git`, която пази почти всичко, което системата съхранява и манипулира.
Ако искате да архивирате или клонирате вашето хранилище, то копирането на тази единична директория ви дава почти всичко необходимо за целта.
Цялата тази глава от книгата се занимава със съдържанието на въпросната директория.
Ето как изглежда една току що инициализирана `.git` директория:

[source,console]
----
$ ls -F1
config
description
HEAD
hooks/
info/
objects/
refs/
----

В зависимост от версията на Git, може да видите и допълнителни неща тук, но в общи линии това е прясно `git init` хранилище.
Файлът `description` се използва само от програмата GitWeb, не ни засяга в момента.
Файлът `config` пази конфигурационните опции за конкретния проект, а директорията `info` съдържа глобалния exclude файл (((excludes))) за игнориране на пътища, които не искате да вмъквате в `.gitignore` файл.
Директорията `hooks` съхранява клиентските и сървърни hook скриптове, на които обърнахме внимание в <<ch08-customizing-git#_git_hooks>>.

Остават четири важни елемента: `HEAD` и (все още липсващите) `index` файлове и директориите `objects` и `refs`.
Именно тези елементи са в ядрото на Git.
Директорията `objects` пази цялото съдържание на вашата база данни, директорията `refs` съхранява указатели в къмит обекти в тези данни (клонове, тагове, remotes и др.). Файлът `HEAD` сочи към клона, съдържанието на който текущо е извлечено в работната директория, а файлът `index` е мястото, където Git пази информацията от индексната област.
Сега ще разгледаме всеки от тези елементи в детайли.
