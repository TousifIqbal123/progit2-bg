=== GitWeb

(((serving repositories, GitWeb)))(((GitWeb)))
Сега, когато имате базисен read/write и read-only достъп до вашия проект, може да искате да добавите прост уеб базиран визуализатор.
Git предоставя CGI скрипт наречен GitWeb, който понякога се ползва за целта.

[[gitweb]]
.GitWeb уеб базиран потребителски интерфейс
image::images/git-instaweb.png[GitWeb уеб базиран потребителски интерфейс]

Ако искате да проверите как ще изглежда GitWeb за вашия проект, Git предлага команда с която да пуснете временна инстанция при условие че системата ви има инсталиран олекотен уеб сървър като `lighttpd` или `webrick`.
На Linux машини, `lighttpd` често идва предварително инсталиран, така че може да го стартирате с командата `git instaweb` в директорията на проекта.
Ако сте на Mac, Leopard идва с инсталиран Ruby, така че `webrick` може да е удобна опция.
За да пуснете `instaweb` с non-lighttpd сървър, можете да я изпълните с аргумента `--httpd`.(((git commands, instaweb)))

[source,console]
----
$ git instaweb --httpd=webrick
[2009-02-21 10:02:21] INFO  WEBrick 1.3.1
[2009-02-21 10:02:21] INFO  ruby 1.8.6 (2008-03-03) [universal-darwin9.0]
----

Това ще ви пусне HTTPD сървър на порт 1234 и след това автоматично ще се стартира уеб браузър, който отваря тази страница.
Лесно е от ваша страна.
Когато сте готови и искате да спрете сървъра, изпълнете командата с аргумента `--stop`:

[source,console]
----
$ git instaweb --httpd=webrick --stop
----

Ако пък искате уеб интерфейсът да е постоянно достъпен, например за екипа ви или за проект с отворен код, ще трябва да направите така, че CGI скриптът да се обслужва от нормален уеб сървър.
Някои Linux дистрибуции имат пакета `gitweb`, който може да се инсталира през `apt` или `dnf`, така че може да ползвате и този начин.
Ще преминем набързо през инсталацията на GitWeb.
Първо, ще ви трябва сорс кода на Git, с който идва GitWeb и след това генерирате custom CGI скрипт:

[source,console]
----
$ git clone git://git.kernel.org/pub/scm/git/git.git
$ cd git/
$ make GITWEB_PROJECTROOT="/srv/git" prefix=/usr gitweb
    SUBDIR gitweb
    SUBDIR ../
make[2]: `GIT-VERSION-FILE' is up to date.
    GEN gitweb.cgi
    GEN static/gitweb.js
$ sudo cp -Rf gitweb /var/www/
----

Отбележете, че трябва да кажете на командата къде да намира Git хранилищата ви посредством променливата `GITWEB_PROJECTROOT`.
След това, трябва да накарате Apache да използва CGI за този скрипт, за което може да добавите виртуален хост:

[source,console]
----
<VirtualHost *:80>
    ServerName gitserver
    DocumentRoot /var/www/gitweb
    <Directory /var/www/gitweb>
        Options +ExecCGI +FollowSymLinks +SymLinksIfOwnerMatch
        AllowOverride All
        order allow,deny
        Allow from all
        AddHandler cgi-script cgi
        DirectoryIndex gitweb.cgi
    </Directory>
</VirtualHost>
----

Да кажем пак, GitWeb може да се обслужва с произволен CGI или Perl съвместим уеб сървър; ако предпочитате различен от Apache, няма проблем да го ползвате.
В този момент трябва да можете да отворите адреса `http://gitserver/` за да видите хранилищата си онлайн.
